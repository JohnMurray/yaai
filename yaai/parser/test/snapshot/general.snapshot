PACKAGE(package) -> IDENTIFIER(myPackage) -> EOS(

) -> TYPE(type) -> IDENTIFIER(myStruct) -> STRUCT(struct) -> L_BRACKET({) -> EOS(
) -> IDENTIFIER(count) -> T_UINT32(uint32) -> EOS(
) -> IDENTIFIER(msg) -> T_STRING(string) -> EOS(
) -> R_BRACKET(}) -> EOS(

) -> ACTOR(actor) -> IDENTIFIER(myActor) -> L_BRACKET({) -> EOS(
) -> VAR(var) -> IDENTIFIER(helloMsg) -> T_STRING(string) -> EOS(
) -> VAR(var) -> IDENTIFIER(count) -> VAR_INITIALIZER(:=) -> NUMERIC_LITERAL(0) -> EOS(

) -> INIT(init) -> L_BRACKET({) -> EOS(
) -> IDENTIFIER(helloMsg) -> ASSIGNMENT(=) -> STRING_LITERAL("Hello, World!") -> EOS(
) -> R_BRACKET(}) -> EOS(

) -> RECEIVE(receive) -> L_PAREN(() -> IDENTIFIER(x) -> T_INT(int) -> R_PAREN()) -> L_BRACKET({) -> EOS(
) -> LINE_COMMENT(// Do some stuff) -> EOS(
) -> R_BRACKET(}) -> EOS(

) -> RECEIVE(receive) -> L_PAREN(() -> IDENTIFIER(data) -> IDENTIFIER(myStruct) -> R_PAREN()) -> L_BRACKET({) -> EOS(
) -> LINE_COMMENT(// handle the data) -> EOS(
) -> R_BRACKET(}) -> EOS(

) -> FUNC(func) -> IDENTIFIER(incCount) -> L_PAREN(() -> R_PAREN()) -> L_BRACKET({) -> EOS(
) -> SELF(self) -> DOT(.) -> IDENTIFIER(count) -> PLUS_EQUAL(+=) -> NUMERIC_LITERAL(1) -> EOS(
) -> R_BRACKET(}) -> EOS(
) -> R_BRACKET(}) -> EOS(

) -> EOF
